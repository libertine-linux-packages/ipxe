# This file is part of libertine linux's package ipxe. It is subject to the license terms in the COPYRIGHT file found in the top-level directory of this distribution and at https://raw.githubusercontent.com/libertine-linux-packages/ipxe/master/COPYRIGHT. No part of libertine linux's package ipxe, including this file, may be copied, modified, propagated, or distributed except according to the terms contained in the COPYRIGHT file.
# Copyright Â© 2018 The developers of libertine linux's package ipxe. See the COPYRIGHT file in the top-level directory of this distribution and at https://raw.githubusercontent.com/libertine-linux-packages/ipxe/master/COPYRIGHT.



depends build_busybox
build_needs rm touch mkdir co echo printf true cat echo awk uname truncate

#depends build_openssl
#build_needs openssl

depends build_perl
build_needs perl

depends build_netbsd_src_csplit
build_needs csplit

depends build_musl_cross_make_build
build_needs "$libertine_build"-cc "$libertine_build"-gcc "$libertine_build"-ld

depends build_musl_cross_make_host
build_needs "$libertine_host"-cc "$libertine_host"-gcc "$libertine_host"-ld "$libertine_host"-as "$libertine_host"-size "$libertine_host"-ar "$libertine_host"-ranlib "$libertine_host"-objcopy "$libertine_host"-nm "$libertine_host"-objdump

_libertine_compile_ipxe_make_undionly()
{
	libertine_public_make bin/undionly.kpxe V=1 CROSS="$libertine_host"- CROSS_COMPILE="$libertine_host"- HOST_CC="$libertine_build"-cc HOST_CFLAGS="$(libertine_public_buildCCompilerFlags)" CC="$libertine_host"-cc CFLAGS="$(libertine_public_hostCCompilerFlags)" "$@"
}

_libertine_compile_ipxe_make_efi()
{
	local ipxe_efiArchitecture

	case "$libertine_hostEfi" in
		
		AA64)
			ipxe_efiArchitecture='arm64'
		;;
		
		ARM)
			ipxe_efiArchitecture='arm32'
		;;
		
		IA32)
			ipxe_efiArchitecture='i386'
		;;
		
		X64)
			ipxe_efiArchitecture='x86_64'
		;;
		
	esac
	
	libertine_public_make bin-"$ipxe_efiArchitecture"-efi/ipxe.efi V=1 CROSS="$libertine_host"- CROSS_COMPILE="$libertine_host"- HOST_CC="$libertine_build"-cc HOST_CFLAGS="$(libertine_public_buildCCompilerFlags)" CC="$libertine_host"-cc CFLAGS="$(libertine_public_hostCCompilerFlags)" "$@"
}


case "$package" in
	
	ipxe_prep)

		variant=upstream

		build_needs sed
		libertine_compile_ipxe_prep()
		{
			sed -i -e 's,/bin/echo,echo,g' "$(libertine_public_sourcePath)"/src/Makefile.housekeeping
			
			pushd "$(libertine_public_sourcePath)"/src
				
				_libertine_compile_ipxe_make_undionly
				
				_libertine_compile_ipxe_make_efi
				
			popd
			
			rm -rf "$(libertine_public_outputMiscPath)"
			ln -s copy/"$variant"/src "$(libertine_public_outputMiscPath)"
		}
		
	;;
	
	ipxe)
		
		variant=empty

		build_needs cp mkdir rm
		libertine_compile_ipxe()
		{
			local ipxe_efiArchitecture
			_libertine_compile_ipxe_efiArchitecture
			
			local inputPath="$(libertine_public_inputMakePath)"

			mkdir -m 0755 -p "$inputPath"
			libertine_public_copy "$(libertine_public_outputMiscPath ipxe_prep)"/. "$(libertine_public_inputMakePath)"/
			
			pushd "$(libertine_public_inputMakePath)"
				
				# Code Signing
			 	#openssl req -newkey rsa -keyout codesign.key -out codesign.req
			    #openssl ca -config ca.cnf -extensions codesigning -in codesign.req -out codesign.crt
				#
				#openssl cms -sign -binary -noattr -in libertine-linux.vmlinuz -signer codesign.crt -inkey codesign.key -certfile ca.crt -outform DER -out libertine-linux.vmlinuz.sig
				
				# Client Certificates
				#openssl req -newkey rsa -keyout client.key -out client.req
				#openssl ca -config ca.cnf -in client.req -out client.crt
				
				_libertine_compile_ipxe_make_undionly CERT=ca.crt,client.crt TRUST=ca.crt PRIVKEY=client.key
				
				_libertine_compile_ipxe_make_efi CERT=ca.crt,client.crt TRUST=ca.crt PRIVKEY=client.key
				
			popd
		}
		
	;;
	
esac
